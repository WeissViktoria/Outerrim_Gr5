// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Configurations;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(OuterrimDbContext))]
    [Migration("20250309132047_initCreate2")]
    partial class initCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Model.Entities.Aircraft", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AIRCRAFT_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Altitude")
                        .HasColumnType("int")
                        .HasColumnName("ALTITUDE");

                    b.Property<int>("Fuel")
                        .HasColumnType("int")
                        .HasColumnName("SPEZIFICATION_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NAME");

                    b.Property<int>("Speed")
                        .HasColumnType("int")
                        .HasColumnName("SPEED");

                    b.Property<int>("SpezifikationId")
                        .HasColumnType("int")
                        .HasColumnName("SPEZIFIKATION_ID");

                    b.HasKey("ID");

                    b.HasIndex("SpezifikationId");

                    b.ToTable("AIRCRAFTS");
                });

            modelBuilder.Entity("Model.Entities.AircraftSpezifikation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AIRCRAFT_SPECIFICATION_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FuelCapacity")
                        .HasColumnType("int")
                        .HasColumnName("FUEL_CAPACITY");

                    b.Property<int>("MaxAltitude")
                        .HasColumnType("int")
                        .HasColumnName("MAX_ALTITUDE");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("int")
                        .HasColumnName("MAX_SPEED");

                    b.Property<int>("MinSpeed")
                        .HasColumnType("int")
                        .HasColumnName("MIN_SPEED");

                    b.Property<string>("SpecificationCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SPECIFICATION_CODE");

                    b.Property<int>("Structure")
                        .HasColumnType("int")
                        .HasColumnName("STRUCTURE");

                    b.HasKey("Id");

                    b.ToTable("AIRCRAFT_SPECIFICATIONS");
                });

            modelBuilder.Entity("Model.Entities.Compartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("COMPARTMENT_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Aircraft_Id")
                        .HasColumnType("int")
                        .HasColumnName("AIRCRAFT_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("Aircraft_Id");

                    b.ToTable("COMPARTMENTS");
                });

            modelBuilder.Entity("Model.Entities.Crew", b =>
                {
                    b.Property<int>("Aircraft_Id")
                        .HasColumnType("int")
                        .HasColumnName("AIRCRAFT_ID");

                    b.Property<int>("Mercenary_Id")
                        .HasColumnType("int")
                        .HasColumnName("MERCENARY_ID");

                    b.HasKey("Aircraft_Id", "Mercenary_Id");

                    b.HasIndex("Mercenary_Id");

                    b.ToTable("AIRCRAFT_CREW_JT");
                });

            modelBuilder.Entity("Model.Entities.CrimeSyndicate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SYNDICATE_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("CRIME_SYNDICATES");
                });

            modelBuilder.Entity("Model.Entities.Machinery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MACHINERY_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompartmentId")
                        .HasColumnType("int")
                        .HasColumnName("COMPARTMENT_ID");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("FUNCTION");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LABEL");

                    b.HasKey("Id");

                    b.HasIndex("CompartmentId");

                    b.ToTable("MACHINERIES_BT");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Model.Entities.Mercenary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MERCENARY_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BodySkill")
                        .HasColumnType("int")
                        .HasColumnName("BODY_SKILL");

                    b.Property<int>("CombatSkill")
                        .HasColumnType("int")
                        .HasColumnName("COMBAT_SKILL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LAST_NAME");

                    b.HasKey("Id");

                    b.ToTable("MERCENARIES");
                });

            modelBuilder.Entity("Model.Entities.MercenaryReputation", b =>
                {
                    b.Property<int>("MercenaryId")
                        .HasColumnType("int")
                        .HasColumnName("MERCENARY_ID");

                    b.Property<int>("CrimeSyndicateId")
                        .HasColumnType("int")
                        .HasColumnName("CRIME_SYNDICATE_ID");

                    b.HasKey("MercenaryId", "CrimeSyndicateId");

                    b.HasIndex("CrimeSyndicateId");

                    b.ToTable("MERCENARY_HAS_REPUTATION_JT");
                });

            modelBuilder.Entity("Model.Entities.Depitors.EnviromentalSystem", b =>
                {
                    b.HasBaseType("Model.Entities.Machinery");

                    b.ToTable("ENVIRONMENTAL_SYSTEMS", (string)null);
                });

            modelBuilder.Entity("Model.Entities.EnergySystem", b =>
                {
                    b.HasBaseType("Model.Entities.Machinery");

                    b.ToTable("ENERGY_SYSTEMS", (string)null);
                });

            modelBuilder.Entity("Model.Entities.Weapon", b =>
                {
                    b.HasBaseType("Model.Entities.Machinery");

                    b.ToTable("WEAPONS", (string)null);
                });

            modelBuilder.Entity("Model.Entities.Aircraft", b =>
                {
                    b.HasOne("Model.Entities.AircraftSpezifikation", "Spezifikation")
                        .WithMany()
                        .HasForeignKey("SpezifikationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spezifikation");
                });

            modelBuilder.Entity("Model.Entities.Compartment", b =>
                {
                    b.HasOne("Model.Entities.Aircraft", "Aircraft")
                        .WithMany("Compartments")
                        .HasForeignKey("Aircraft_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");
                });

            modelBuilder.Entity("Model.Entities.Crew", b =>
                {
                    b.HasOne("Model.Entities.Aircraft", "Aircraft")
                        .WithMany("CrewItems")
                        .HasForeignKey("Aircraft_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Mercenary", "Mercenary")
                        .WithMany()
                        .HasForeignKey("Mercenary_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Model.Entities.Machinery", b =>
                {
                    b.HasOne("Model.Entities.Compartment", "Compartment")
                        .WithMany()
                        .HasForeignKey("CompartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compartment");
                });

            modelBuilder.Entity("Model.Entities.MercenaryReputation", b =>
                {
                    b.HasOne("Model.Entities.CrimeSyndicate", "CrimeSyndicate")
                        .WithMany()
                        .HasForeignKey("CrimeSyndicateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Mercenary", "Mercenary")
                        .WithMany()
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrimeSyndicate");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Model.Entities.Depitors.EnviromentalSystem", b =>
                {
                    b.HasOne("Model.Entities.Machinery", null)
                        .WithOne()
                        .HasForeignKey("Model.Entities.Depitors.EnviromentalSystem", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Entities.EnergySystem", b =>
                {
                    b.HasOne("Model.Entities.Machinery", null)
                        .WithOne()
                        .HasForeignKey("Model.Entities.EnergySystem", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Entities.Weapon", b =>
                {
                    b.HasOne("Model.Entities.Machinery", null)
                        .WithOne()
                        .HasForeignKey("Model.Entities.Weapon", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Entities.Aircraft", b =>
                {
                    b.Navigation("Compartments");

                    b.Navigation("CrewItems");
                });
#pragma warning restore 612, 618
        }
    }
}
